################################################################################
#   EPM configuration file to create the canpi-server package
#
#   Note: Expects ${binary} and ${srcdir} to be defined externally
#
#   04 July, 2022 - E M Thornber
#   Created
#
#   13 December, 2023 - E M Thornber
#   Changed name of package
#
#   20 January, 2024 - E M Thornber
#   Add initialisation of device can0
#
#   01 February, 2024 - E M Thornber
#   Add initialisation of avahi (Bonjour)
#
#   09 February, 2024 - E M Thornber
#   Add template re rebooting after installation
#   Handle various paths to config.txt
#
################################################################################
#
# Utilities
$SCTL=/usr/bin/systemctl
# Services
$AVAHID="avahi-daemon"
$CANPI="canpid.service"
$NETWORKD="systemd-networkd"
# Directories
$canpi=/usr/local/etc/canpi
$bindir=/usr/local/bin
$ifdir=/etc/systemd/network
$logdir=/var/log/canpid
$service=/usr/lib/systemd/system
$avahidir=/etc/systemd/system/${AVAHID}.service.d
# Sources
$cfgdir=${srcdir}/config
$scripts=${srcdir}/scripts

$candev=/proc/device-tree/can0_osc

%product Interface to MERG CBUS via CANPiCAP
%copyright 2024 MERG
%vendor Enchanted Systems Limited
%license LICENSE
%readme README.md
%description Interfaces MERG-CANBUS protocol with JMRI Engine Driver application.
%version 1.1.0beta1

%requires avahi-daemon
%requires avahi-utils
%requires debconf
%requires can-utils
%requires liblog4cpp5v5

d 755 root root /etc -
d 755 root root /etc/logrotate.d -
d 755 root root /etc/systemd -
d 755 root root /etc/systemd/network -
d 755 root root ${ifdir} -
d 755 root root /usr -
d 755 root root /usr/lib -
d 755 root root /usr/lib/systemd -
d 755 root root ${service} -
d 755 root root /usr/local -
d 755 root root ${bindir} -
d 755 root root /usr/local/etc -
d 755 root root ${canpi} -
d 755 root root /var -
d 755 root root /var/log -
d 755 root root ${logdir} -

# canpi daemon, control script, and service definition
f 755 root root ${bindir}/canpid    ${binary}
f 755 root root ${bindir}/canpidctl ${scripts}/canpidctl.bash
f 644 root root ${service}/${CANPI} ${cfgdir}/${CANPI}

# canpi configuration files
f 644 root root ${ifdir}/80-can.network      ${cfgdir}/80-can.network
f 644 root root ${canpi}/canpi.cfg           ${cfgdir}/canpi.cfg
f 644 root root ${canpi}/canpi.json          ${cfgdir}/canpi-config-defn.json
f 644 root root ${canpi}/multiple.service.in ${cfgdir}/multiple.service.in
f 644 root root ${canpi}/turnout.txt            ${cfgdir}/turnout.txt
f 644 root root /etc/logrotate.d/canpid         ${cfgdir}/canpid.logrotate

%literal(config) <<EOF
# Source debconf library.
. /usr/share/debconf/confmodule

if [ ! -e ${candev} ] ; then
    # The can0 device will only be loaded when the RPi is rebooted
    db_set canpi-server/reboot false
    db_input high canpi-server/reboot || true
    db_go || true
fi

EOF

%literal(templates) <<EOF
Template: canpi-server/reboot
Type: boolean
Description: Would you like to reboot to complete the package installation ?
 The package installation updates the device table overlay definition.
 For these changes to take effect the system must be restarted.
 The canpi daemon is not started by the package installation as the lack of /dev/can0
 will cause it to fail immediately.

EOF

%preinstall <<EOF
# Check status of can0 device
if [ ! -e ${candev} ] ; then
    # Add can0 to boot configuration
    BOOTCONFIG=/boot/firmware/config.txt
    if [ ! -f $${BOOTCONFIG} ]
    then BOOTCONFIG=/boot/config.txt
    fi
    SUFFIX=precanpi

    CAN0FILE=`find /boot/overlays/ -type f -name mcp2515-can0\* -exec basename {} .dtbo \;`
    CAN0OVERLAY="dtoverlay=$${CAN0FILE},oscillator=16000000,interrupt=25"
    SPIDEFN="dtparam=spi="

    # Save current boot configuration
    cp $${BOOTCONFIG} $${BOOTCONFIG}.$${SUFFIX}
    grep -v $${SPIDEFN} $${BOOTCONFIG}.$${SUFFIX} | grep -vx $${CAN0OVERLAY} > $${BOOTCONFIG}
    echo "$${SPIDEFN}on"   >> $${BOOTCONFIG}
    echo "$${CAN0OVERLAY}" >> $${BOOTCONFIG}
fi

# Enable and start systemd-networkd service if necessary
if ! ${SCTL} is-enabled --quiet --type=service ${NETWORKD}
then ${SCTL} enable ${NETWORKD}
fi

if ! ${SCTL} is-active --quiet --type=service ${NETWORKD}
then ${SCTL} start ${NETWORKD}
fi

EOF

%postinstall <<EOF
# Source debconf library.
. /usr/share/debconf/confmodule

${SCTL} daemon-reload
${SCTL} restart ${AVAHID}
${SCTL} restart ${NETWORKD}
${SCTL} enable ${CANPI}
# Check status of can0 device
if [ -e ${candev} ]
then ${SCTL} start ${CANPI}
else
    # The can0 device will only be loaded when the RPi is rebooted
    db_get canpi-server/reboot
    if [ "$$RET" = true ]; then shutdown -r now ; fi
fi

EOF

%preremove <<EOF
${SCTL} stop ${CANPI}
${SCTL} disable ${CANPI}

EOF

%postremove <<EOF
# Source debconf library.
. /usr/share/debconf/confmodule

if [ "$$1" = "purge" ]; then
    # Remove my changes to the debconf db.
    db_purge
fi

${SCTL} daemon-reload
${SCTL} restart ${AVAHID}
${SCTL} restart ${NETWORKD}

EOF
